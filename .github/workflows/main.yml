name: Deploy to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
        
    - name: Build application
      run: npm run build
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Create SSH directory
      run: mkdir -p ~/.ssh
        
    - name: Store SSH key
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2_key.pem
        chmod 600 ~/.ssh/ec2_key.pem
        
    - name: Add EC2 host to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Setup EC2 Prerequisites
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Update package list
          sudo apt-get update

          # Install curl if not present (needed for Node.js installation)
          which curl || sudo apt-get install -y curl

          # Check if Node.js is installed, if not install it
          if ! command -v node &> /dev/null; then
            echo "Installing Node.js..."
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
          fi

          # Check Node.js version
          node --version

          # Install PM2 globally if not installed
          if ! command -v pm2 &> /dev/null; then
            echo "Installing PM2..."
            sudo npm install -g pm2
          fi

          # Ensure PM2 starts on system boot
          pm2 startup | tail -n 1 | sudo bash

          # Create application directory if it doesn't exist
          mkdir -p /home/${{ secrets.EC2_USERNAME }}/app
        
    - name: Deploy to EC2
      run: |
        rsync -avz --delete \
          -e "ssh -i ~/.ssh/ec2_key.pem" \
          .next package.json package-lock.json public next.config.js \
          ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USERNAME }}/app/
          
    - name: Start Application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd /home/${{ secrets.EC2_USERNAME }}/app
          npm ci --production
          # Save PM2 process list before restart
          pm2 save
          # Start or restart the application
          pm2 restart next-app || pm2 start npm --name "next-app" -- start
          # Save PM2 process list again after changes
          pm2 save